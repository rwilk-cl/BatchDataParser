server.port=8081

# Batch Configuration
spring.batch.initializer.enabled=true
spring.batch.job.enabled=false
spring.batch.initialize-schema=always

# H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2
# Datasource
spring.datasource.url=jdbc:h2:file:~/test
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# Path to excel file
# excel.to.database.job.source.file.path=data/poke.xls
excel.to.database.job.source.file.path=data/excel.xlsx

file.resource=data/excel-1.xlsx,data/excel-2.xlsx,data/poke.xls
#file.resource=C:/Users/rawi/IdeaProjects/BatchDataParser/src/main/resources/data/excel-2.xlsx,C:/Users/rawi/IdeaProjects/BatchDataParser/src/main/resources/data/excel-1.xlsx,C:/Users/rawi/IdeaProjects/BatchDataParser/src/main/resources/data/poke.xls


#spring.datasource.url = jdbc:mysql://localhost/spring_batch?serverTimezone=UTC
#pring.datasource.username = root
#spring.datasource.password =

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.tomcat.test-on-borrow = true
#spring.datasource.tomcat.validation-query = SELECT 1

# Show or not log for each sql query
#spring.jpa.show-sql = true
#Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto = update